#!/usr/bin/env ruby
require 'gli'
require 'httparty'
begin # XXX: Remove this begin/rescue before distributing your app
require 'article'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/article` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/article now"
  exit 64
end

class App
  extend GLI::App

  program_desc 'Describe your application here'

  version Article::VERSION

  subcommand_option_handling :normal
  arguments :strict

  desc 'Describe some switch here'
  switch [:s,:switch]

  desc 'Describe some flag here'
  default_value 'the default'
  arg_name 'The name of the argument'
  flag [:f,:flagname]

  desc 'Describe search here'
  arg_name 'Describe arguments to search here'
  command :search do |c|
    c.desc 'Describe a switch to search'
    c.switch :s

    c.desc 'Describe a flag to search'
    c.default_value 'default'
    c.flag :f
    c.action do |global_options,options,args|

      url = 'http://localhost:3000/article_json'
      param = args[0]
  	  if param
        request_path = url + '?search=' + param
        response = HTTParty.get(request_path)
      else
        response = HTTParty.get(url)
      end
      articles = JSON.parse(response.body)

      articles.each do |item|
        puts "Title: #{item["title"]}\n"
        puts "Description: #{item["description"]}\n"
        if item["author"]
          puts "Author: #{item["author"]}\n"
        end
        puts "-" * 30 + "\n"
      end
    end
  end

  pre do |global,command,options,args|
    # Pre logic here
    # Return true to proceed; false to abort and not call the
    # chosen command
    # Use skips_pre before a command to skip this block
    # on that command only
    true
  end

  post do |global,command,options,args|
    # Post logic here
    # Use skips_post before a command to skip this
    # block on that command only
  end

  on_error do |exception|
    # Error logic here
    # return false to skip default error handling
    true
  end
end

exit App.run(ARGV)
